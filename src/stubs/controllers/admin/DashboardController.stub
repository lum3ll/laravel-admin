<?php

namespace {{ namespace }}Http\Controllers\Admin;

use LaravelAdmin\Registry;
use Illuminate\Http\Request;
use InvalidArgumentException;
use {{ namespace }}Http\Controllers\Controller;
use {{ namespace }}Http\Middleware\AdminMiddleware;

class DashboardController extends Controller
{
    /**
     * DashboardController constructor.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return void
     */
    public function __construct(Request $request)
    {
        $this->middleware(AdminMiddleware::class);
        
        $this->serializeModelRegistry($request);
    }

    /**
     * Render the admin dashboard.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\View\View
     */
    public function index(Request $request)
    {
        $registry = unserialize($request->session()->get('adminBackends'));

        return view('admin.dashboard')
            ->with('models', collect($registry->all()));
    }

    /**
     * When a model is viewed.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  string  $model
     * @return \Illuminate\Http\View
     */
    public function view(Request $request, $model)
    {
        $registry = unserialize($request->session()->get('adminBackends'));

        try {
            $table = $registry->get($model);
        } catch (InvalidArgumentException $e) {
            abort(404);
        }

        $records = $table->paginate(config('admin.paginate'));

        return view('admin.view')
            ->with('table', $table)
            ->with('records', $records)
            ->with('model', $model);
    }

    /**
     * Check if the backend registry exists.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return void
     */
    private function serializeModelRegistry(Request $request)
    {
        $registry = serialize($this->retrieveRegistry());

        $request->session()->put('adminBackends', $registry);
    }

    /**
     * Retrieve all models.
     *
     * @return void
     */
    private function retrieveRegistry()
    {
        $registry = new Registry;

        foreach (config('admin.models') as $key => $value) {
            $registry->add($key, $value);
        }

        return $registry;
    }
}